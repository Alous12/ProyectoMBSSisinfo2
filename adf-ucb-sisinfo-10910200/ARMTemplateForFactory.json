{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Nombre de instancia de Data Factory",
			"defaultValue": "adf-ucb-sisinfo-10910200"
		},
		"sa_MBS_raw_connectionString": {
			"type": "secureString",
			"metadata": "Cadena protegida para \"connectionString\"de \"sa_MBS_raw\""
		},
		"sql_dw_mountain_bike_store_password": {
			"type": "secureString",
			"metadata": "Cadena protegida para \"password\"de \"sql_dw_mountain_bike_store\""
		},
		"sql_dw_mountain_bike_store_properties_typeProperties_server": {
			"type": "string",
			"defaultValue": "sql-ucb-sisinfo-10910200.database.windows.net"
		},
		"sql_dw_mountain_bike_store_properties_typeProperties_database": {
			"type": "string",
			"defaultValue": "dw-moutain-bike"
		},
		"sql_dw_mountain_bike_store_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "ruben"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/BRONZE_PL_Clientes_BD_MBS')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Data flow1",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "BRONZE_df_Clientes_db_MBS",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"source1": {},
									"sink1": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine",
							"continueOnError": true
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "BRONZE"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/BRONZE_df_Clientes_db_MBS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/BRONZE_PL_Clientes_MBS')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Data flow1",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "BRONZE_df_Clientes_MBS",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"source1": {},
									"sink1": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine",
							"continueOnError": true
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "BRONZE"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/BRONZE_df_Clientes_MBS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/BRONZE_PL_Clientes_location_MBS')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Data flow1",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "BRONZE_df_Clientes_location_MBS",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"source1": {},
									"sink1": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine",
							"continueOnError": true
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "BRONZE"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/BRONZE_df_Clientes_location_MBS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/BRONZE_PL_Detalle_Ventas_MBS')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Data flow1",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "BRONZE_df_detalles_ventas_MBS",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"source1": {},
									"sink1": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine",
							"continueOnError": true
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "BRONZE"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/BRONZE_df_detalles_ventas_MBS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/BRONZE_PL_Productos_Cat_Mant_MBS')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Data flow1",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "BRONZE_df_Productos_Cat_MBS",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"source1": {},
									"sink1": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine",
							"continueOnError": true
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "BRONZE"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/BRONZE_df_Productos_Cat_MBS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/BRONZE_PL_Productos_MBS')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Data flow1",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "BRONZE_df_Productos_MBS",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"source1": {},
									"sink1": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine",
							"continueOnError": true
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "BRONZE"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/BRONZE_df_Productos_MBS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SILVER_PL_Clientes')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Data flow1",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "SILVER_df_Datos_Clientes",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"source1": {},
									"source2": {},
									"source3": {},
									"sink1": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "SILVER"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/SILVER_df_Datos_Clientes')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SILVER_PL_Productos')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Data flow1",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "SILVER_df_Datos_Productos",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"source2": {},
									"source3": {},
									"sink1": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "SILVER"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/SILVER_df_Datos_Productos')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/BRONZE_sql_Clientes_MBS')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "sql_dw_mountain_bike_store",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "BRONZE"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "cst_id",
						"type": "int",
						"precision": 10
					},
					{
						"name": "cst_key",
						"type": "varchar"
					},
					{
						"name": "cst_firstname",
						"type": "varchar"
					},
					{
						"name": "cst_lastname",
						"type": "varchar"
					},
					{
						"name": "cst_marital_status",
						"type": "varchar"
					},
					{
						"name": "cst_gndr",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "BRONZE",
					"table": "CLIENTES"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/sql_dw_mountain_bike_store')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/BRONZE_sql_Clientes_bd_MBS')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "sql_dw_mountain_bike_store",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "BRONZE"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "CID",
						"type": "varchar"
					},
					{
						"name": "BDATE",
						"type": "date"
					},
					{
						"name": "GEN",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "BRONZE",
					"table": "CLIENTES_BD"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/sql_dw_mountain_bike_store')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/BRONZE_sql_Clientes_location_MBS')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "sql_dw_mountain_bike_store",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "BRONZE"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "CID",
						"type": "varchar"
					},
					{
						"name": "CNTRY",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "BRONZE",
					"table": "CLIENTES_LOC"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/sql_dw_mountain_bike_store')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/BRONZE_sql_Detalles_ventas_MSB')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "sql_dw_mountain_bike_store",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "BRONZE"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "sls_ord_num",
						"type": "varchar"
					},
					{
						"name": "sls_prd_key",
						"type": "varchar"
					},
					{
						"name": "sls_cust_id",
						"type": "int",
						"precision": 10
					},
					{
						"name": "sls_order_dt",
						"type": "varchar"
					},
					{
						"name": "sls_ship_dt",
						"type": "varchar"
					},
					{
						"name": "sls_sales",
						"type": "decimal",
						"precision": 18,
						"scale": 0
					},
					{
						"name": "sls_quantity",
						"type": "int",
						"precision": 10
					},
					{
						"name": "sls_price",
						"type": "decimal",
						"precision": 18,
						"scale": 0
					}
				],
				"typeProperties": {
					"schema": "BRONZE",
					"table": "DETALLE_VENTAS"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/sql_dw_mountain_bike_store')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/BRONZE_sql_Productos_Cat_MBS')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "sql_dw_mountain_bike_store",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "BRONZE"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "ID",
						"type": "varchar"
					},
					{
						"name": "CAT",
						"type": "varchar"
					},
					{
						"name": "SUBCAT",
						"type": "varchar"
					},
					{
						"name": "MAINTENANCE",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "BRONZE",
					"table": "PRODUCTOS_CAT"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/sql_dw_mountain_bike_store')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/BRONZE_sql_Productos_MBS')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "sql_dw_mountain_bike_store",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "BRONZE"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "prd_id",
						"type": "int",
						"precision": 10
					},
					{
						"name": "prd_key",
						"type": "varchar"
					},
					{
						"name": "prd_nm",
						"type": "varchar"
					},
					{
						"name": "prd_cost",
						"type": "decimal",
						"precision": 18,
						"scale": 0
					},
					{
						"name": "prd_line",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "BRONZE",
					"table": "PRODUCTOS"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/sql_dw_mountain_bike_store')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Clientes_MBS_csv')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "sa_MBS_raw",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "BRONZE"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "Clientes.csv",
						"container": "raw"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "cst_id",
						"type": "String"
					},
					{
						"name": "cst_key",
						"type": "String"
					},
					{
						"name": "cst_firstname",
						"type": "String"
					},
					{
						"name": "cst_lastname",
						"type": "String"
					},
					{
						"name": "cst_marital_status",
						"type": "String"
					},
					{
						"name": "cst_gndr",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/sa_MBS_raw')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Clientes_bd_csv')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "sa_MBS_raw",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "BRONZE"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "Clientes_BD-GEN.csv",
						"container": "raw"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "CID",
						"type": "String"
					},
					{
						"name": "BDATE",
						"type": "String"
					},
					{
						"name": "GEN",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/sa_MBS_raw')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Clientes_location_csv')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "sa_MBS_raw",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "BRONZE"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "Clientes_location.csv",
						"container": "raw"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "CID",
						"type": "String"
					},
					{
						"name": "CNTRY",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/sa_MBS_raw')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Detalles_ventas_csv')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "sa_MBS_raw",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "BRONZE"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "Detalle_ventas.csv",
						"container": "raw"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "sls_ord_num",
						"type": "String"
					},
					{
						"name": "sls_prd_key",
						"type": "String"
					},
					{
						"name": "sls_cust_id",
						"type": "String"
					},
					{
						"name": "sls_order_dt",
						"type": "String"
					},
					{
						"name": "sls_ship_dt",
						"type": "String"
					},
					{
						"name": "sls_sales",
						"type": "String"
					},
					{
						"name": "sls_quantity",
						"type": "String"
					},
					{
						"name": "sls_price",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/sa_MBS_raw')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Productos_Cat_Man_csv')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "sa_MBS_raw",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "BRONZE"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "Productos_CAT_MANT.csv",
						"container": "raw"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "ID",
						"type": "String"
					},
					{
						"name": "CAT",
						"type": "String"
					},
					{
						"name": "SUBCAT",
						"type": "String"
					},
					{
						"name": "MAINTENANCE",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/sa_MBS_raw')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Productos_csv')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "sa_MBS_raw",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "BRONZE"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "Productos.csv",
						"container": "raw"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "prd_id",
						"type": "String"
					},
					{
						"name": "prd_key",
						"type": "String"
					},
					{
						"name": "prd_nm",
						"type": "String"
					},
					{
						"name": "prd_cost",
						"type": "String"
					},
					{
						"name": "prd_line",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/sa_MBS_raw')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SILVER_sql_Datos_Clientes')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "sql_dw_mountain_bike_store",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "SILVER"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "cst_id",
						"type": "int",
						"precision": 10
					},
					{
						"name": "cst_key",
						"type": "varchar"
					},
					{
						"name": "fullname",
						"type": "varchar"
					},
					{
						"name": "marital_status",
						"type": "varchar"
					},
					{
						"name": "gender",
						"type": "varchar"
					},
					{
						"name": "Birth_Date",
						"type": "date"
					},
					{
						"name": "country",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "SILVER",
					"table": "DATOS_CLIENTES"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/sql_dw_mountain_bike_store')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SILVER_sql_Datos_Prodcutos_Vendidos')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "sql_dw_mountain_bike_store",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "SILVER"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "prd_id",
						"type": "int",
						"precision": 10
					},
					{
						"name": "prd_key",
						"type": "varchar"
					},
					{
						"name": "prd_nombre",
						"type": "varchar"
					},
					{
						"name": "prd_cost",
						"type": "decimal",
						"precision": 18,
						"scale": 0
					},
					{
						"name": "linea",
						"type": "varchar"
					},
					{
						"name": "categoria",
						"type": "varchar"
					},
					{
						"name": "subcategoria",
						"type": "varchar"
					},
					{
						"name": "mantenimiento",
						"type": "bit"
					},
					{
						"name": "cantidad_total",
						"type": "int",
						"precision": 10
					},
					{
						"name": "ventas_totales",
						"type": "decimal",
						"precision": 18,
						"scale": 2
					},
					{
						"name": "precio_promedio",
						"type": "decimal",
						"precision": 18,
						"scale": 2
					},
					{
						"name": "veces_vendido",
						"type": "int",
						"precision": 10
					}
				],
				"typeProperties": {
					"schema": "SILVER",
					"table": "DATOS_PRODUCTOS_VENDIDOS"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/sql_dw_mountain_bike_store')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SILVER_sql_Datos_Productos')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "sql_dw_mountain_bike_store",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "SILVER"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "prd_id",
						"type": "int",
						"precision": 10
					},
					{
						"name": "prd_key",
						"type": "varchar"
					},
					{
						"name": "prd_nombre",
						"type": "varchar"
					},
					{
						"name": "prd_cost",
						"type": "decimal",
						"precision": 18,
						"scale": 0
					},
					{
						"name": "linea",
						"type": "varchar"
					},
					{
						"name": "category",
						"type": "varchar"
					},
					{
						"name": "subcategory",
						"type": "varchar"
					},
					{
						"name": "maintenance",
						"type": "bit"
					}
				],
				"typeProperties": {
					"schema": "SILVER",
					"table": "DATOS_PRODUCTOS"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/sql_dw_mountain_bike_store')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/sa_MBS_raw')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('sa_MBS_raw_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/sql_dw_mountain_bike_store')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"server": "[parameters('sql_dw_mountain_bike_store_properties_typeProperties_server')]",
					"database": "[parameters('sql_dw_mountain_bike_store_properties_typeProperties_database')]",
					"encrypt": "mandatory",
					"trustServerCertificate": false,
					"authenticationType": "SQL",
					"userName": "[parameters('sql_dw_mountain_bike_store_properties_typeProperties_userName')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('sql_dw_mountain_bike_store_password')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/BRONZE_df_Clientes_MBS')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "BRONZE"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "Clientes_MBS_csv",
								"type": "DatasetReference"
							},
							"name": "source1"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "BRONZE_sql_Clientes_MBS",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [],
					"scriptLines": [
						"source(output(",
						"          cst_id as string,",
						"          cst_key as string,",
						"          cst_firstname as string,",
						"          cst_lastname as string,",
						"          cst_marital_status as string,",
						"          cst_gndr as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> source1",
						"source1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          cst_id as integer,",
						"          cst_key as string,",
						"          cst_firstname as string,",
						"          cst_lastname as string,",
						"          cst_marital_status as string,",
						"          cst_gndr as string",
						"     ),",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError',",
						"     mapColumn(",
						"          cst_id,",
						"          cst_key,",
						"          cst_firstname,",
						"          cst_lastname,",
						"          cst_marital_status,",
						"          cst_gndr",
						"     )) ~> sink1"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/Clientes_MBS_csv')]",
				"[concat(variables('factoryId'), '/datasets/BRONZE_sql_Clientes_MBS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/BRONZE_df_Clientes_db_MBS')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "BRONZE"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "Clientes_bd_csv",
								"type": "DatasetReference"
							},
							"name": "source1"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "BRONZE_sql_Clientes_bd_MBS",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [],
					"scriptLines": [
						"source(output(",
						"          CID as string,",
						"          BDATE as string,",
						"          GEN as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> source1",
						"source1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          CID as string,",
						"          BDATE as date,",
						"          GEN as string",
						"     ),",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError',",
						"     mapColumn(",
						"          CID,",
						"          BDATE,",
						"          GEN",
						"     )) ~> sink1"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/Clientes_bd_csv')]",
				"[concat(variables('factoryId'), '/datasets/BRONZE_sql_Clientes_bd_MBS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/BRONZE_df_Clientes_location_MBS')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "BRONZE"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "Clientes_location_csv",
								"type": "DatasetReference"
							},
							"name": "source1"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "BRONZE_sql_Clientes_location_MBS",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [],
					"scriptLines": [
						"source(output(",
						"          CID as string,",
						"          CNTRY as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> source1",
						"source1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          CID as string,",
						"          CNTRY as string",
						"     ),",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError',",
						"     mapColumn(",
						"          CID,",
						"          CNTRY",
						"     )) ~> sink1"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/Clientes_location_csv')]",
				"[concat(variables('factoryId'), '/datasets/BRONZE_sql_Clientes_location_MBS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/BRONZE_df_Productos_Cat_MBS')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "BRONZE"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "Productos_Cat_Man_csv",
								"type": "DatasetReference"
							},
							"name": "source1"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "BRONZE_sql_Productos_Cat_MBS",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [],
					"scriptLines": [
						"source(output(",
						"          ID as string,",
						"          CAT as string,",
						"          SUBCAT as string,",
						"          MAINTENANCE as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> source1",
						"source1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          ID as string,",
						"          CAT as string,",
						"          SUBCAT as string,",
						"          MAINTENANCE as string",
						"     ),",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError',",
						"     mapColumn(",
						"          ID,",
						"          CAT,",
						"          SUBCAT,",
						"          MAINTENANCE",
						"     )) ~> sink1"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/Productos_Cat_Man_csv')]",
				"[concat(variables('factoryId'), '/datasets/BRONZE_sql_Productos_Cat_MBS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/BRONZE_df_Productos_MBS')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "BRONZE"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "Productos_csv",
								"type": "DatasetReference"
							},
							"name": "source1"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "BRONZE_sql_Productos_MBS",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [],
					"scriptLines": [
						"source(output(",
						"          prd_id as string,",
						"          prd_key as string,",
						"          prd_nm as string,",
						"          prd_cost as string,",
						"          prd_line as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> source1",
						"source1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          prd_id as integer,",
						"          prd_key as string,",
						"          prd_nm as string,",
						"          prd_cost as decimal(18,0),",
						"          prd_line as string",
						"     ),",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError',",
						"     mapColumn(",
						"          prd_id,",
						"          prd_key,",
						"          prd_nm,",
						"          prd_cost,",
						"          prd_line",
						"     )) ~> sink1"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/Productos_csv')]",
				"[concat(variables('factoryId'), '/datasets/BRONZE_sql_Productos_MBS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/BRONZE_df_detalles_ventas_MBS')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "BRONZE"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "Detalles_ventas_csv",
								"type": "DatasetReference"
							},
							"name": "source1"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "BRONZE_sql_Detalles_ventas_MSB",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [],
					"scriptLines": [
						"source(output(",
						"          sls_ord_num as string,",
						"          sls_prd_key as string,",
						"          sls_cust_id as string,",
						"          sls_order_dt as string,",
						"          sls_ship_dt as string,",
						"          sls_sales as string,",
						"          sls_quantity as string,",
						"          sls_price as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> source1",
						"source1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          sls_ord_num as string,",
						"          sls_prd_key as string,",
						"          sls_cust_id as integer,",
						"          sls_order_dt as string,",
						"          sls_ship_dt as string,",
						"          sls_sales as decimal(18,0),",
						"          sls_quantity as integer,",
						"          sls_price as decimal(18,0)",
						"     ),",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError',",
						"     mapColumn(",
						"          sls_ord_num,",
						"          sls_prd_key,",
						"          sls_cust_id,",
						"          sls_order_dt,",
						"          sls_ship_dt,",
						"          sls_sales,",
						"          sls_quantity,",
						"          sls_price",
						"     )) ~> sink1"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/Detalles_ventas_csv')]",
				"[concat(variables('factoryId'), '/datasets/BRONZE_sql_Detalles_ventas_MSB')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SILVER_df_Datos_Clientes')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "SILVER"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "BRONZE_sql_Clientes_bd_MBS",
								"type": "DatasetReference"
							},
							"name": "source1"
						},
						{
							"dataset": {
								"referenceName": "BRONZE_sql_Clientes_MBS",
								"type": "DatasetReference"
							},
							"name": "source2"
						},
						{
							"dataset": {
								"referenceName": "BRONZE_sql_Clientes_location_MBS",
								"type": "DatasetReference"
							},
							"name": "source3"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "SILVER_sql_Datos_Clientes",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "join1"
						},
						{
							"name": "derivedColumn1"
						},
						{
							"name": "join2"
						},
						{
							"name": "select1"
						},
						{
							"name": "derivedColumn2"
						}
					],
					"scriptLines": [
						"source(output(",
						"          CID as string,",
						"          BDATE as date,",
						"          GEN as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     format: 'table') ~> source1",
						"source(output(",
						"          cst_id as integer,",
						"          cst_key as string,",
						"          cst_firstname as string,",
						"          cst_lastname as string,",
						"          cst_marital_status as string,",
						"          cst_gndr as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     format: 'table') ~> source2",
						"source(output(",
						"          CID as string,",
						"          CNTRY as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     format: 'table') ~> source3",
						"source2, source1 join(cst_key == iif(startsWith(CID, 'NAS'), substring(CID, 4),CID),",
						"     joinType:'cross',",
						"     matchType:'exact',",
						"     ignoreSpaces: false,",
						"     broadcast: 'auto')~> join1",
						"source3 derive(CID = replace(CID, '-', '')) ~> derivedColumn1",
						"derivedColumn1, join1 join(derivedColumn1@CID == cst_key,",
						"     joinType:'left',",
						"     matchType:'exact',",
						"     ignoreSpaces: false,",
						"     broadcast: 'auto')~> join2",
						"derivedColumn2 select(mapColumn(",
						"          CNTRY,",
						"          cst_id,",
						"          cst_key,",
						"          cst_marital_status,",
						"          BDATE,",
						"          fullname,",
						"          Gender",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> select1",
						"join2 derive(fullname = trim(cst_firstname) + ' ' + trim(cst_lastname),",
						"          Gender = iif(isNull(GEN), cst_gndr, GEN)) ~> derivedColumn2",
						"select1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          cst_id as integer,",
						"          cst_key as string,",
						"          fullname as string,",
						"          marital_status as string,",
						"          gender as string,",
						"          Birth_Date as date,",
						"          country as string",
						"     ),",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError',",
						"     mapColumn(",
						"          cst_id,",
						"          cst_key,",
						"          fullname,",
						"          marital_status = cst_marital_status,",
						"          gender = Gender,",
						"          Birth_Date = BDATE,",
						"          country = CNTRY",
						"     )) ~> sink1"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/BRONZE_sql_Clientes_bd_MBS')]",
				"[concat(variables('factoryId'), '/datasets/BRONZE_sql_Clientes_MBS')]",
				"[concat(variables('factoryId'), '/datasets/BRONZE_sql_Clientes_location_MBS')]",
				"[concat(variables('factoryId'), '/datasets/SILVER_sql_Datos_Clientes')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SILVER_df_Datos_Productos')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "SILVER"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "BRONZE_sql_Productos_MBS",
								"type": "DatasetReference"
							},
							"name": "source2"
						},
						{
							"dataset": {
								"referenceName": "BRONZE_sql_Productos_Cat_MBS",
								"type": "DatasetReference"
							},
							"name": "source3"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "SILVER_sql_Datos_Productos",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "LimpiarProductos"
						},
						{
							"name": "LimpiarProductosCat"
						},
						{
							"name": "join1"
						},
						{
							"name": "mantenimiento"
						},
						{
							"name": "select1"
						}
					],
					"scriptLines": [
						"source(output(",
						"          prd_id as integer,",
						"          prd_key as string,",
						"          prd_nm as string,",
						"          prd_cost as decimal(18,0),",
						"          prd_line as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     format: 'table') ~> source2",
						"source(output(",
						"          ID as string,",
						"          CAT as string,",
						"          SUBCAT as string,",
						"          MAINTENANCE as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     format: 'table') ~> source3",
						"source2 derive(prd_key = replace(prd_key, '-', '')) ~> LimpiarProductos",
						"source3 derive(ID = replace(ID, '_', '')) ~> LimpiarProductosCat",
						"LimpiarProductos, LimpiarProductosCat join(startsWith(prd_key, ID),",
						"     joinType:'cross',",
						"     matchType:'exact',",
						"     ignoreSpaces: false,",
						"     broadcast: 'off')~> join1",
						"join1 derive(MAINTENANCE = iif(MAINTENANCE == 'Yes', 1, 0),",
						"          prd_cost = iif(isNull(prd_cost), 0, toInteger(prd_cost))) ~> mantenimiento",
						"mantenimiento select(mapColumn(",
						"          prd_id,",
						"          prd_key,",
						"          prd_nm,",
						"          prd_cost,",
						"          prd_line,",
						"          CAT,",
						"          SUBCAT,",
						"          MAINTENANCE",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> select1",
						"select1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          prd_id as integer,",
						"          prd_key as string,",
						"          prd_nombre as string,",
						"          prd_cost as decimal(18,0),",
						"          linea as string,",
						"          category as string,",
						"          subcategory as string,",
						"          maintenance as boolean",
						"     ),",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError',",
						"     mapColumn(",
						"          prd_id,",
						"          prd_key,",
						"          prd_nombre = prd_nm,",
						"          prd_cost,",
						"          linea = prd_line,",
						"          category = CAT,",
						"          subcategory = SUBCAT,",
						"          maintenance = MAINTENANCE",
						"     )) ~> sink1"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/BRONZE_sql_Productos_MBS')]",
				"[concat(variables('factoryId'), '/datasets/BRONZE_sql_Productos_Cat_MBS')]",
				"[concat(variables('factoryId'), '/datasets/SILVER_sql_Datos_Productos')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SILVER_df_Datos_Produtos_Vendidos')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "SILVER"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "BRONZE_sql_Productos_Cat_MBS",
								"type": "DatasetReference"
							},
							"name": "source1"
						},
						{
							"dataset": {
								"referenceName": "BRONZE_sql_Detalles_ventas_MSB",
								"type": "DatasetReference"
							},
							"name": "source2"
						},
						{
							"dataset": {
								"referenceName": "BRONZE_sql_Productos_MBS",
								"type": "DatasetReference"
							},
							"name": "source3"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "SILVER_sql_Datos_Prodcutos_Vendidos",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "derivedColumn1"
						},
						{
							"name": "derivedColumn2"
						},
						{
							"name": "derivedColumn3"
						},
						{
							"name": "join1"
						},
						{
							"name": "join2"
						},
						{
							"name": "derivedColumn4"
						},
						{
							"name": "aggregate1"
						}
					],
					"scriptLines": [
						"source(output(",
						"          ID as string,",
						"          CAT as string,",
						"          SUBCAT as string,",
						"          MAINTENANCE as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     format: 'table') ~> source1",
						"source(output(",
						"          sls_ord_num as string,",
						"          sls_prd_key as string,",
						"          sls_cust_id as integer,",
						"          sls_order_dt as string,",
						"          sls_ship_dt as string,",
						"          sls_sales as decimal(18,0),",
						"          sls_quantity as integer,",
						"          sls_price as decimal(18,0)",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     format: 'table') ~> source2",
						"source(output(",
						"          prd_id as integer,",
						"          prd_key as string,",
						"          prd_nm as string,",
						"          prd_cost as decimal(18,0),",
						"          prd_line as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     format: 'table') ~> source3",
						"source3 derive(prd_key = replace(prd_key, '-', '')) ~> derivedColumn1",
						"source2 derive(sls_prd_key = replace(sls_prd_key, '-', '')) ~> derivedColumn2",
						"source1 derive(ID = replace(ID, '_', '')) ~> derivedColumn3",
						"derivedColumn1, derivedColumn3 join(startsWith(prd_key, ID),",
						"     joinType:'cross',",
						"     matchType:'exact',",
						"     ignoreSpaces: false,",
						"     broadcast: 'auto')~> join1",
						"derivedColumn2, join1 join(endsWith(prd_key, sls_prd_key),",
						"     joinType:'cross',",
						"     matchType:'exact',",
						"     ignoreSpaces: false,",
						"     broadcast: 'auto')~> join2",
						"join2 derive(MAINTENANCE = iif(MAINTENANCE == 'Yes', 1, 0),",
						"          prd_cost = iif(isNull(prd_cost), 0, toInteger(prd_cost))) ~> derivedColumn4",
						"derivedColumn4 aggregate(groupBy(prd_key),",
						"     cantidad_total = sum(sls_quantity),",
						"          ventas_totales = sum(sls_sales),",
						"          precio_promedio = avg(sls_price),",
						"          veces_vendido = count(1),",
						"          prd_id = first(prd_id),",
						"          prd_nm = first(prd_nm),",
						"          prd_cost = first(prd_cost),",
						"          prd_line = first(prd_line),",
						"          CAT = first(CAT),",
						"          SUBCAT = first(SUBCAT),",
						"          MAINTENANCE = first(MAINTENANCE)) ~> aggregate1",
						"aggregate1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          prd_id as integer,",
						"          prd_key as string,",
						"          prd_nombre as string,",
						"          prd_cost as decimal(18,0),",
						"          linea as string,",
						"          categoria as string,",
						"          subcategoria as string,",
						"          mantenimiento as boolean,",
						"          cantidad_total as integer,",
						"          ventas_totales as decimal(18,2),",
						"          precio_promedio as decimal(18,2),",
						"          veces_vendido as integer",
						"     ),",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError',",
						"     mapColumn(",
						"          prd_id,",
						"          prd_key,",
						"          prd_nombre = prd_nm,",
						"          prd_cost,",
						"          linea = prd_line,",
						"          categoria = CAT,",
						"          subcategoria = SUBCAT,",
						"          mantenimiento = MAINTENANCE,",
						"          cantidad_total,",
						"          ventas_totales,",
						"          precio_promedio,",
						"          veces_vendido",
						"     )) ~> sink1"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/BRONZE_sql_Productos_Cat_MBS')]",
				"[concat(variables('factoryId'), '/datasets/BRONZE_sql_Detalles_ventas_MSB')]",
				"[concat(variables('factoryId'), '/datasets/BRONZE_sql_Productos_MBS')]",
				"[concat(variables('factoryId'), '/datasets/SILVER_sql_Datos_Prodcutos_Vendidos')]"
			]
		}
	]
}