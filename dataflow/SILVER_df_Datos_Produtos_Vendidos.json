{
	"name": "SILVER_df_Datos_Produtos_Vendidos",
	"properties": {
		"folder": {
			"name": "SILVER"
		},
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "BRONZE_sql_Productos_Cat_MBS",
						"type": "DatasetReference"
					},
					"name": "source1"
				},
				{
					"dataset": {
						"referenceName": "BRONZE_sql_Detalles_ventas_MSB",
						"type": "DatasetReference"
					},
					"name": "source2"
				},
				{
					"dataset": {
						"referenceName": "BRONZE_sql_Productos_MBS",
						"type": "DatasetReference"
					},
					"name": "source3"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "SILVER_sql_Datos_Productos_Vendidos",
						"type": "DatasetReference"
					},
					"name": "sink1"
				}
			],
			"transformations": [
				{
					"name": "derivedColumn1"
				},
				{
					"name": "derivedColumn2"
				},
				{
					"name": "derivedColumn3"
				},
				{
					"name": "join1"
				},
				{
					"name": "join2"
				},
				{
					"name": "derivedColumn4"
				},
				{
					"name": "aggregate1"
				}
			],
			"scriptLines": [
				"source(output(",
				"          ID as string,",
				"          CAT as string,",
				"          SUBCAT as string,",
				"          MAINTENANCE as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table') ~> source1",
				"source(output(",
				"          sls_ord_num as string,",
				"          sls_prd_key as string,",
				"          sls_cust_id as integer,",
				"          sls_order_dt as string,",
				"          sls_ship_dt as string,",
				"          sls_sales as decimal(18,0),",
				"          sls_quantity as integer,",
				"          sls_price as decimal(18,0)",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table') ~> source2",
				"source(output(",
				"          prd_id as integer,",
				"          prd_key as string,",
				"          prd_nm as string,",
				"          prd_cost as decimal(18,0),",
				"          prd_line as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table') ~> source3",
				"source3 derive(prd_key = replace(prd_key, '-', '')) ~> derivedColumn1",
				"source2 derive(sls_prd_key = replace(sls_prd_key, '-', '')) ~> derivedColumn2",
				"source1 derive(ID = replace(ID, '_', '')) ~> derivedColumn3",
				"derivedColumn1, derivedColumn3 join(startsWith(prd_key, ID),",
				"     joinType:'cross',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> join1",
				"derivedColumn2, join1 join(endsWith(prd_key, sls_prd_key),",
				"     joinType:'cross',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> join2",
				"join2 derive(prd_cost = iif(isNull(prd_cost), 0, toInteger(prd_cost)),",
				"          fecha_venta = toDate((sls_order_dt), 'yyyyMMdd')) ~> derivedColumn4",
				"derivedColumn4 aggregate(groupBy(prd_key),",
				"     cantidad_total = sum(sls_quantity),",
				"          ventas_totales = sum(sls_sales),",
				"          precio_promedio = avg(sls_price),",
				"          veces_vendido = count(1),",
				"          prd_id = first(prd_id),",
				"          prd_nm = first(prd_nm),",
				"          prd_cost = first(prd_cost),",
				"          CAT = first(CAT),",
				"          SUBCAT = first(SUBCAT),",
				"          fecha_venta = first(fecha_venta)) ~> aggregate1",
				"aggregate1 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          prd_id as integer,",
				"          prd_key as string,",
				"          prd_nombre as string,",
				"          prd_cost as decimal(18,0),",
				"          categoria as string,",
				"          subcategoria as string,",
				"          fecha_venta as date,",
				"          cantidad_total as integer,",
				"          ventas_totales as decimal(18,2),",
				"          precio_promedio as decimal(18,2),",
				"          veces_vendido as integer",
				"     ),",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     format: 'table',",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     errorHandlingOption: 'stopOnFirstError',",
				"     mapColumn(",
				"          prd_id,",
				"          prd_key,",
				"          prd_nombre = prd_nm,",
				"          prd_cost,",
				"          categoria = CAT,",
				"          subcategoria = SUBCAT,",
				"          fecha_venta,",
				"          cantidad_total,",
				"          ventas_totales,",
				"          precio_promedio,",
				"          veces_vendido",
				"     )) ~> sink1"
			]
		}
	}
}